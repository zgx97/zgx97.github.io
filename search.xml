<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[计蒜客 宝藏(状压DP)]]></title>
      <url>/2017/11/23/%E8%AE%A1%E8%92%9C%E5%AE%A2-%E5%AE%9D%E8%97%8F-%E7%8A%B6%E5%8E%8BDP/</url>
      <content type="html"><![CDATA[<h3 id="计蒜客-宝藏-状压DP"><a href="#计蒜客-宝藏-状压DP" class="headerlink" title="计蒜客  宝藏 (状压DP)"></a>计蒜客  宝藏 (状压DP)</h3><hr>
<p><strong>链接 : </strong><a href="https://nanti.jisuanke.com/t/18546" target="_blank" rel="external">Here!</a></p>
<p><strong>思路 : </strong></p>
<ul>
<li>状压DP. 开始想直接爆搜, T掉了, 然后就采用了状压DP的方法来做.</li>
<li>定义$f[S]$为集合$S$的最小代价, $dis[i]$则记录第$i$个点的”深度”, 所以说边$E{[i, j]}$ 的工程代价就为$dis[i] * E{[i, j]}$, 因此可以得到状态转移方程 : <ul>
<li>初始状态(假设以$i$作为起点) : <ul>
<li>$dis[i] = 1$, $f[1 &lt;&lt; (i - 1)] = 0$, </li>
<li>$dis[k] = INF (k != i, k = 1, 2, 3 …)$, $f[k] = INF (k != (1 &lt;&lt; (i - 1)), k = 1, 2, … , (1 &lt;&lt; n) - 1)$ </li>
</ul>
</li>
<li>对于中间状态$j$ : <ul>
<li>$f[S | 1 &lt;&lt; (j - 1)] = min(f[S | 1 &lt;&lt; (j - 1)], f[S] + E[i][j] * dis[i])$</li>
<li>$dis[j] = dis[i] + 1$</li>
</ul>
</li>
</ul>
</li>
<li><font color="red"><strong>大犇说, 状压为什么快, 是因为在读取数据的时候比普通数组要快… 所以说, 我还是不太理解…为什么快, QAQ, 大犇还说, 世界上总有这么一群人, 你们俩算法复杂度一样, 但他就是比你快几百倍… em….</strong></font>

</li>
</ul>
<p><strong>代码 :</strong> </p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_N 15</span></div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x7FFFFFFF</span>;</div><div class="line"><span class="keyword">int</span> E[MAX_N][MAX_N];</div><div class="line"><span class="keyword">int</span> dis[MAX_N], f[<span class="number">1</span> &lt;&lt; MAX_N];</div><div class="line"><span class="keyword">int</span> n, m;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; ++i) &#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= n ; ++j) &#123;</div><div class="line">            E[i][j] = INF;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</div><div class="line">    init();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; m ; ++i) &#123;</div><div class="line">        <span class="keyword">int</span> u, v, w;</div><div class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;u, &amp;v, &amp;w);</div><div class="line">        E[u][v] = min(E[u][v], w);</div><div class="line">        E[v][u] = min(E[v][u], w);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> S)</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; ++i) &#123;</div><div class="line">        <span class="keyword">if</span> (!((<span class="number">1</span> &lt;&lt; (i - <span class="number">1</span>)) &amp; S)) <span class="keyword">continue</span>;</div><div class="line">        </div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= n ; ++j) &#123;</div><div class="line">                <span class="comment">// if (!((1 &lt;&lt; (j - 1) &amp; S) == 0 &amp;&amp; E[i][j] != INF)) continue;</span></div><div class="line">                <span class="keyword">if</span> (!(!(<span class="number">1</span> &lt;&lt; (j - <span class="number">1</span>) &amp; S) &amp;&amp; E[i][j] != INF)) <span class="keyword">continue</span>;</div><div class="line">                <span class="keyword">if</span> (f[S | (<span class="number">1</span> &lt;&lt; (j - <span class="number">1</span>))] &lt;= f[S] + dis[i] * E[i][j]) <span class="keyword">continue</span>;</div><div class="line">                f[S | (<span class="number">1</span> &lt;&lt; (j - <span class="number">1</span>))] = f[S] + dis[i] * E[i][j];</div><div class="line">                <span class="keyword">int</span> t_dis = dis[j];</div><div class="line">                dis[j] = dis[i] + <span class="number">1</span>;</div><div class="line">                find(S | (<span class="number">1</span> &lt;&lt; (j - <span class="number">1</span>)));</div><div class="line">                dis[j] = t_dis;</div><div class="line">            &#125;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> ans = INF;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; ++i) &#123;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= n ; ++j) dis[j] = INF;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= (<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span> ; ++j) f[j] = INF;</div><div class="line">        dis[i] = <span class="number">1</span>;</div><div class="line">        f[<span class="number">1</span> &lt;&lt; (i - <span class="number">1</span>)] = <span class="number">0</span>;</div><div class="line">        find(<span class="number">1</span> &lt;&lt; (i - <span class="number">1</span>));</div><div class="line">        ans = min(ans, f[(<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span>]);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</div><div class="line">    read();</div><div class="line">    solve();</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> 状压DP </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[诗词]]></title>
      <url>/2017/10/08/%E8%AF%97%E8%AF%8D/</url>
      <content type="html"><![CDATA[<p>《晚登三山还望京邑》</p>
<p>年代: 南北朝 作者: 谢朓</p>
<p>灞涘望长安，河阳视京县。</p>
<p>白日丽飞甍，参差皆可见。</p>
<p>余霞散成绮，澄江静如练。</p>
<p>喧鸟覆春洲，杂英满芳甸。</p>
<p>去矣方滞淫，怀哉罢欢宴。</p>
<p>佳期怅何许，泪下如流霰。</p>
<p>有情知望乡，谁能鬒不变。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/10/07/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
        <tags>
            
            <tag> 初始介绍 </tag>
            
            <tag> 测试功能使用 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[I want sleep]]></title>
      <url>/2017/10/07/I-want-sleep/</url>
      <content type="html"><![CDATA[<p><strong>I realy want sleep!</strong></p>
<p>《桃花庵遇仙记》</p>
<p>年代: 明 作者: 唐寅</p>
<p>那时那日此门中，桃花树下初相逢。</p>
<p>只见仙人种桃树，未闻仙人看花红。</p>
<p>朝朝期待仙人顾，日日桃花笑春风。</p>
<p>忽闻仙踪一朝至，桃花人面分外红。</p>
<p>桃花谷里桃花仙，桃花美人树下眠。</p>
<p>花魂酿就桃花酒，君识花香皆有缘。</p>
<p>美酒消愁愁不见，醉卧花下枕安然。</p>
<p>花中不知日月短，岂料世上已千年。</p>
<p>不入浊世凡尘染，情愿枝头做花仙。</p>
<p>春来三月香风送，便是花奴问君安。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[First Night]]></title>
      <url>/2017/10/07/first_blog/</url>
      <content type="html"><![CDATA[<blockquote>
<p>今天累死我了,现在硬是干到了接近3点，我要狗带了！</p>
</blockquote>
]]></content>
      
        
    </entry>
    
  
  
</search>
